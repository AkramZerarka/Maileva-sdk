<?php
/**
 * RecipientResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  Maileva\Client
 * @author   Maileva Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Maileva / Envoi et Suivi de Lettres Recommandées En Ligne distribuées par le facteur
 *
 * API pour envoyer et suivre des Lettres Recommandées En Ligne distribuées par le facteur  Elles comprennent les fonctions clés pour :   - créer un envoi,  - ajouter des documents et des destinataires,  - choisir ses options (noir & blanc ou couleur, recto ou recto-verso, avec ou sans AR …).  - suivre la production (date de planification, suivi de l’envoi…).  Voir la documentation \"notification_center\".
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Maileva Codegen version: 3.0.21
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Maileva\Client\Model;

use \ArrayAccess;
use \Maileva\Client\ObjectSerializer;

/**
 * RecipientResponse Class Doc Comment
 *
 * @category Class
 * @description Les destinataires importés pour l&#x27;envoi
 * @package  Maileva\Client
 * @author   Maileva Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class RecipientResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'recipient_response';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
'custom_id' => 'string',
'custom_data' => 'string',
'address_line_1' => 'string',
'address_line_2' => 'string',
'address_line_3' => 'string',
'address_line_4' => 'string',
'address_line_5' => 'string',
'address_line_6' => 'string',
'country_code' => '\Maileva\Client\Model\CountryCode',
'pages_range' => '\Maileva\Client\Model\PagesRange',
'status' => '\Maileva\Client\Model\RecipientStatus',
'status_detail' => 'string',
'last_delivery_status' => 'string',
'last_delivery_status_date' => 'string',
'postage_price' => 'float',
'registered_number' => 'string',
'archive_date' => '\DateTime',
'archive_url' => 'string',
'acknowledgement_of_receipt_archive_date' => '\DateTime',
'acknowledgement_of_receipt_url' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
'custom_id' => null,
'custom_data' => null,
'address_line_1' => null,
'address_line_2' => null,
'address_line_3' => null,
'address_line_4' => null,
'address_line_5' => null,
'address_line_6' => null,
'country_code' => null,
'pages_range' => null,
'status' => null,
'status_detail' => null,
'last_delivery_status' => null,
'last_delivery_status_date' => 'datetime',
'postage_price' => 'float',
'registered_number' => null,
'archive_date' => 'date-time',
'archive_url' => null,
'acknowledgement_of_receipt_archive_date' => 'date-time',
'acknowledgement_of_receipt_url' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
'custom_id' => 'custom_id',
'custom_data' => 'custom_data',
'address_line_1' => 'address_line_1',
'address_line_2' => 'address_line_2',
'address_line_3' => 'address_line_3',
'address_line_4' => 'address_line_4',
'address_line_5' => 'address_line_5',
'address_line_6' => 'address_line_6',
'country_code' => 'country_code',
'pages_range' => 'pages_range',
'status' => 'status',
'status_detail' => 'status_detail',
'last_delivery_status' => 'last_delivery_status',
'last_delivery_status_date' => 'last_delivery_status_date',
'postage_price' => 'postage_price',
'registered_number' => 'registered_number',
'archive_date' => 'archive_date',
'archive_url' => 'archive_url',
'acknowledgement_of_receipt_archive_date' => 'acknowledgement_of_receipt_archive_date',
'acknowledgement_of_receipt_url' => 'acknowledgement_of_receipt_url'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
'custom_id' => 'setCustomId',
'custom_data' => 'setCustomData',
'address_line_1' => 'setAddressLine1',
'address_line_2' => 'setAddressLine2',
'address_line_3' => 'setAddressLine3',
'address_line_4' => 'setAddressLine4',
'address_line_5' => 'setAddressLine5',
'address_line_6' => 'setAddressLine6',
'country_code' => 'setCountryCode',
'pages_range' => 'setPagesRange',
'status' => 'setStatus',
'status_detail' => 'setStatusDetail',
'last_delivery_status' => 'setLastDeliveryStatus',
'last_delivery_status_date' => 'setLastDeliveryStatusDate',
'postage_price' => 'setPostagePrice',
'registered_number' => 'setRegisteredNumber',
'archive_date' => 'setArchiveDate',
'archive_url' => 'setArchiveUrl',
'acknowledgement_of_receipt_archive_date' => 'setAcknowledgementOfReceiptArchiveDate',
'acknowledgement_of_receipt_url' => 'setAcknowledgementOfReceiptUrl'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
'custom_id' => 'getCustomId',
'custom_data' => 'getCustomData',
'address_line_1' => 'getAddressLine1',
'address_line_2' => 'getAddressLine2',
'address_line_3' => 'getAddressLine3',
'address_line_4' => 'getAddressLine4',
'address_line_5' => 'getAddressLine5',
'address_line_6' => 'getAddressLine6',
'country_code' => 'getCountryCode',
'pages_range' => 'getPagesRange',
'status' => 'getStatus',
'status_detail' => 'getStatusDetail',
'last_delivery_status' => 'getLastDeliveryStatus',
'last_delivery_status_date' => 'getLastDeliveryStatusDate',
'postage_price' => 'getPostagePrice',
'registered_number' => 'getRegisteredNumber',
'archive_date' => 'getArchiveDate',
'archive_url' => 'getArchiveUrl',
'acknowledgement_of_receipt_archive_date' => 'getAcknowledgementOfReceiptArchiveDate',
'acknowledgement_of_receipt_url' => 'getAcknowledgementOfReceiptUrl'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['custom_id'] = isset($data['custom_id']) ? $data['custom_id'] : null;
        $this->container['custom_data'] = isset($data['custom_data']) ? $data['custom_data'] : null;
        $this->container['address_line_1'] = isset($data['address_line_1']) ? $data['address_line_1'] : null;
        $this->container['address_line_2'] = isset($data['address_line_2']) ? $data['address_line_2'] : null;
        $this->container['address_line_3'] = isset($data['address_line_3']) ? $data['address_line_3'] : null;
        $this->container['address_line_4'] = isset($data['address_line_4']) ? $data['address_line_4'] : null;
        $this->container['address_line_5'] = isset($data['address_line_5']) ? $data['address_line_5'] : null;
        $this->container['address_line_6'] = isset($data['address_line_6']) ? $data['address_line_6'] : null;
        $this->container['country_code'] = isset($data['country_code']) ? $data['country_code'] : null;
        $this->container['pages_range'] = isset($data['pages_range']) ? $data['pages_range'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['status_detail'] = isset($data['status_detail']) ? $data['status_detail'] : null;
        $this->container['last_delivery_status'] = isset($data['last_delivery_status']) ? $data['last_delivery_status'] : null;
        $this->container['last_delivery_status_date'] = isset($data['last_delivery_status_date']) ? $data['last_delivery_status_date'] : null;
        $this->container['postage_price'] = isset($data['postage_price']) ? $data['postage_price'] : null;
        $this->container['registered_number'] = isset($data['registered_number']) ? $data['registered_number'] : null;
        $this->container['archive_date'] = isset($data['archive_date']) ? $data['archive_date'] : null;
        $this->container['archive_url'] = isset($data['archive_url']) ? $data['archive_url'] : null;
        $this->container['acknowledgement_of_receipt_archive_date'] = isset($data['acknowledgement_of_receipt_archive_date']) ? $data['acknowledgement_of_receipt_archive_date'] : null;
        $this->container['acknowledgement_of_receipt_url'] = isset($data['acknowledgement_of_receipt_url']) ? $data['acknowledgement_of_receipt_url'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['id'] === null) {
            $invalidProperties[] = "'id' can't be null";
        }
        if ($this->container['address_line_6'] === null) {
            $invalidProperties[] = "'address_line_6' can't be null";
        }
        if ($this->container['country_code'] === null) {
            $invalidProperties[] = "'country_code' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id Identifiant du destinataire
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets custom_id
     *
     * @return string
     */
    public function getCustomId()
    {
        return $this->container['custom_id'];
    }

    /**
     * Sets custom_id
     *
     * @param string $custom_id Identifiant du destinataire fourni par le client
     *
     * @return $this
     */
    public function setCustomId($custom_id)
    {
        $this->container['custom_id'] = $custom_id;

        return $this;
    }

    /**
     * Gets custom_data
     *
     * @return string
     */
    public function getCustomData()
    {
        return $this->container['custom_data'];
    }

    /**
     * Sets custom_data
     *
     * @param string $custom_data Information libre fournie par le client
     *
     * @return $this
     */
    public function setCustomData($custom_data)
    {
        $this->container['custom_data'] = $custom_data;

        return $this;
    }

    /**
     * Gets address_line_1
     *
     * @return string
     */
    public function getAddressLine1()
    {
        return $this->container['address_line_1'];
    }

    /**
     * Sets address_line_1
     *
     * @param string $address_line_1 Ligne d'adresse n°1 (Société)
     *
     * @return $this
     */
    public function setAddressLine1($address_line_1)
    {
        $this->container['address_line_1'] = $address_line_1;

        return $this;
    }

    /**
     * Gets address_line_2
     *
     * @return string
     */
    public function getAddressLine2()
    {
        return $this->container['address_line_2'];
    }

    /**
     * Sets address_line_2
     *
     * @param string $address_line_2 Ligne d'adresse n°2 (Civilité, Prénom, Nom)
     *
     * @return $this
     */
    public function setAddressLine2($address_line_2)
    {
        $this->container['address_line_2'] = $address_line_2;

        return $this;
    }

    /**
     * Gets address_line_3
     *
     * @return string
     */
    public function getAddressLine3()
    {
        return $this->container['address_line_3'];
    }

    /**
     * Sets address_line_3
     *
     * @param string $address_line_3 Ligne d'adresse n°3 (Résidence, Bâtiement ...)
     *
     * @return $this
     */
    public function setAddressLine3($address_line_3)
    {
        $this->container['address_line_3'] = $address_line_3;

        return $this;
    }

    /**
     * Gets address_line_4
     *
     * @return string
     */
    public function getAddressLine4()
    {
        return $this->container['address_line_4'];
    }

    /**
     * Sets address_line_4
     *
     * @param string $address_line_4 Ligne d'adresse n°4 (N° et libellé de la voie)
     *
     * @return $this
     */
    public function setAddressLine4($address_line_4)
    {
        $this->container['address_line_4'] = $address_line_4;

        return $this;
    }

    /**
     * Gets address_line_5
     *
     * @return string
     */
    public function getAddressLine5()
    {
        return $this->container['address_line_5'];
    }

    /**
     * Sets address_line_5
     *
     * @param string $address_line_5 Ligne d'adresse n°5 (Lieu dit, BP...)
     *
     * @return $this
     */
    public function setAddressLine5($address_line_5)
    {
        $this->container['address_line_5'] = $address_line_5;

        return $this;
    }

    /**
     * Gets address_line_6
     *
     * @return string
     */
    public function getAddressLine6()
    {
        return $this->container['address_line_6'];
    }

    /**
     * Sets address_line_6
     *
     * @param string $address_line_6 Ligne d'adresse n°6 (Code postal et ville)
     *
     * @return $this
     */
    public function setAddressLine6($address_line_6)
    {
        $this->container['address_line_6'] = $address_line_6;

        return $this;
    }

    /**
     * Gets country_code
     *
     * @return \Maileva\Client\Model\CountryCode
     */
    public function getCountryCode()
    {
        return $this->container['country_code'];
    }

    /**
     * Sets country_code
     *
     * @param \Maileva\Client\Model\CountryCode $country_code country_code
     *
     * @return $this
     */
    public function setCountryCode($country_code)
    {
        $this->container['country_code'] = $country_code;

        return $this;
    }

    /**
     * Gets pages_range
     *
     * @return \Maileva\Client\Model\PagesRange
     */
    public function getPagesRange()
    {
        return $this->container['pages_range'];
    }

    /**
     * Sets pages_range
     *
     * @param \Maileva\Client\Model\PagesRange $pages_range pages_range
     *
     * @return $this
     */
    public function setPagesRange($pages_range)
    {
        $this->container['pages_range'] = $pages_range;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \Maileva\Client\Model\RecipientStatus
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \Maileva\Client\Model\RecipientStatus $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets status_detail
     *
     * @return string
     */
    public function getStatusDetail()
    {
        return $this->container['status_detail'];
    }

    /**
     * Sets status_detail
     *
     * @param string $status_detail Détail d'un statut (cause du rejet)
     *
     * @return $this
     */
    public function setStatusDetail($status_detail)
    {
        $this->container['status_detail'] = $status_detail;

        return $this;
    }

    /**
     * Gets last_delivery_status
     *
     * @return string
     */
    public function getLastDeliveryStatus()
    {
        return $this->container['last_delivery_status'];
    }

    /**
     * Sets last_delivery_status
     *
     * @param string $last_delivery_status Dernier statut de distribution
     *
     * @return $this
     */
    public function setLastDeliveryStatus($last_delivery_status)
    {
        $this->container['last_delivery_status'] = $last_delivery_status;

        return $this;
    }

    /**
     * Gets last_delivery_status_date
     *
     * @return string
     */
    public function getLastDeliveryStatusDate()
    {
        return $this->container['last_delivery_status_date'];
    }

    /**
     * Sets last_delivery_status_date
     *
     * @param string $last_delivery_status_date Date du dernier statut de distribution
     *
     * @return $this
     */
    public function setLastDeliveryStatusDate($last_delivery_status_date)
    {
        $this->container['last_delivery_status_date'] = $last_delivery_status_date;

        return $this;
    }

    /**
     * Gets postage_price
     *
     * @return float
     */
    public function getPostagePrice()
    {
        return $this->container['postage_price'];
    }

    /**
     * Sets postage_price
     *
     * @param float $postage_price Coût de l'affranchissement en euros
     *
     * @return $this
     */
    public function setPostagePrice($postage_price)
    {
        $this->container['postage_price'] = $postage_price;

        return $this;
    }

    /**
     * Gets registered_number
     *
     * @return string
     */
    public function getRegisteredNumber()
    {
        return $this->container['registered_number'];
    }

    /**
     * Sets registered_number
     *
     * @param string $registered_number Numéro de recommandé
     *
     * @return $this
     */
    public function setRegisteredNumber($registered_number)
    {
        $this->container['registered_number'] = $registered_number;

        return $this;
    }

    /**
     * Gets archive_date
     *
     * @return \DateTime
     */
    public function getArchiveDate()
    {
        return $this->container['archive_date'];
    }

    /**
     * Sets archive_date
     *
     * @param \DateTime $archive_date Date d'archivage du pli
     *
     * @return $this
     */
    public function setArchiveDate($archive_date)
    {
        $this->container['archive_date'] = $archive_date;

        return $this;
    }

    /**
     * Gets archive_url
     *
     * @return string
     */
    public function getArchiveUrl()
    {
        return $this->container['archive_url'];
    }

    /**
     * Sets archive_url
     *
     * @param string $archive_url URL de l'archive du pli
     *
     * @return $this
     */
    public function setArchiveUrl($archive_url)
    {
        $this->container['archive_url'] = $archive_url;

        return $this;
    }

    /**
     * Gets acknowledgement_of_receipt_archive_date
     *
     * @return \DateTime
     */
    public function getAcknowledgementOfReceiptArchiveDate()
    {
        return $this->container['acknowledgement_of_receipt_archive_date'];
    }

    /**
     * Sets acknowledgement_of_receipt_archive_date
     *
     * @param \DateTime $acknowledgement_of_receipt_archive_date Date d'archivage de l'avis de réception (AR)
     *
     * @return $this
     */
    public function setAcknowledgementOfReceiptArchiveDate($acknowledgement_of_receipt_archive_date)
    {
        $this->container['acknowledgement_of_receipt_archive_date'] = $acknowledgement_of_receipt_archive_date;

        return $this;
    }

    /**
     * Gets acknowledgement_of_receipt_url
     *
     * @return string
     */
    public function getAcknowledgementOfReceiptUrl()
    {
        return $this->container['acknowledgement_of_receipt_url'];
    }

    /**
     * Sets acknowledgement_of_receipt_url
     *
     * @param string $acknowledgement_of_receipt_url URL de l'archive de l'avis de réception
     *
     * @return $this
     */
    public function setAcknowledgementOfReceiptUrl($acknowledgement_of_receipt_url)
    {
        $this->container['acknowledgement_of_receipt_url'] = $acknowledgement_of_receipt_url;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
